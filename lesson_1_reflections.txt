How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    This made it very easy to do a comparison between the parts of the file that are different. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    If you had a working version of your program that you can quickly revert back to that if your new version contains a bug.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually choosing when to commit allows you to save versions that make logical sense. However, you could also forget to save new versions and create files that are very difficult to compare. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    When working with code, files are often related in some way. However, there is no such assumption when using other version control systems such as google docs.

How can you use the commands git log and git diff to view the history of files?

    You can use git log to view all the versions. Then you can use git diff command to look at the specific changes between two versions. 

How might using version control make you more confident to make changes that
could break something?

    You can easily revert back to previous code so you don't need to worry about making changes that might introduce a bug.

Now that you have your workspace set up, what do you want to try using Git for?

    I can't get my workspace set up!
    